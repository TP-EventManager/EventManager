/*
 * Created on 24 oct. 2014 ( Time 13:24:02 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */

package org.demo.persistence.services.jpa;


import javax.persistence.EntityManager;
import javax.persistence.PersistenceException;
import javax.persistence.Query;

import org.demo.bean.jpa.SubscriptionsEntity;
import org.demo.bean.jpa.SubscriptionsEntityKey;
import org.demo.persistence.commons.jpa.GenericJpaService;
import org.demo.persistence.commons.jpa.JpaOperation;
import org.demo.persistence.services.SubscriptionsPersistence;

/**
 * JPA implementation for basic persistence operations ( entity "Subscriptions" )
 * 
 * @author Telosys Tools Generator
 *
 */
public class SubscriptionsPersistenceJPA extends GenericJpaService<SubscriptionsEntity, SubscriptionsEntityKey> implements SubscriptionsPersistence {

	/**
	 * Constructor
	 */
	public SubscriptionsPersistenceJPA() {
		super(SubscriptionsEntity.class);
	}

	@Override
	public SubscriptionsEntity load( String email, Integer event ) {
		// Build the composite key
		SubscriptionsEntityKey key = new SubscriptionsEntityKey( email, event );
		return super.load( key );
	}

	@Override
	public boolean delete( String email, Integer event ) {
		// Build the composite key
		SubscriptionsEntityKey key = new SubscriptionsEntityKey( email, event );
		return super.delete( key );
	}

	@Override
	public boolean delete(SubscriptionsEntity entity) {
		if ( entity != null ) {
			// Build the composite key
			SubscriptionsEntityKey key = new SubscriptionsEntityKey( entity.getEmail(), entity.getEvent() );
			return super.delete( key );
		}
		return false ;
	}

	@Override
	public long countAll() {
		// JPA operation definition 
		JpaOperation operation = new JpaOperation() {
			@Override
			public Object exectue(EntityManager em) throws PersistenceException {
				Query query = em.createNamedQuery("SubscriptionsEntity.countAll");
				return query.getSingleResult() ;
			}
		} ;
		// JPA operation execution 
		return (Long) execute(operation);
	}

}
